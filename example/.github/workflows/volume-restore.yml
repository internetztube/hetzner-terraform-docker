name: Volume Restore

on:
  workflow_dispatch:
    inputs:
      terraform_module_name:
        description: 'Module Name of Server'
        required: true
        type: choice
        options:
          - worker1
      backup_file_name:
        description: 'File Name from Hetzner Object Bucket. Just the filename/path.'
        required: true

concurrency:
  group: deploy

jobs:
  restore:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Restore
        working-directory: terraform
        env:
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN }}
          TF_VAR_location: "nbg1"
          TF_VAR_ssh_public_key: "${{ secrets.SSH_PUBLIC_KEY }}"
          TF_VAR_ssh_private_key: "${{ secrets.SSH_PRIVATE_KEY }}"

          AWS_ACCESS_KEY_ID: "${{ secrets.HCLOUD_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.HCLOUD_SECRET_ACCESS_KEY }}"

          BACKUP_BUCKET_LOCATION: "nbg1"
          BACKUP_BUCKET_NAME: "backup-volume-radio-fingerprinting"
          BACKUP_SSH_PRIVATE_KEY: "${{ secrets.SSH_PRIVATE_KEY }}"
          BACKUP_FILE_NAME: "${{ github.event.inputs.backup_file_name }}"
          BACKUP_TERRAFORM_MODULE_NAME: "${{ github.event.inputs.terraform_module_name }}"

        run: |
          terraform init
          export BACKUP_TERRAFORM_MODULE_PATH="module.${BACKUP_TERRAFORM_MODULE_NAME}"
          sh -x "./.terraform/modules/${BACKUP_TERRAFORM_MODULE_NAME}/pipeline-scripts/volume-restore.sh"
